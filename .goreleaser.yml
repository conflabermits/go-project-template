# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
version: 2

project_name: go-project-template

before:
  hooks:
    - go mod tidy

builds:
  - env:
      - CGO_ENABLED=0
    id: default
    main: ./cmd/hello/main.go
    goos:
      - windows
      - linux
      - darwin
    goarch:
      - amd64
      - arm64
    mod_timestamp: "{{ .CommitTimestamp }}"
    flags:
      - -trimpath
    ldflags:
      - -s -w -X main.version={{.Version}} -X main.commit={{.Commit}} -X main.date={{ .CommitDate }} -X main.builtBy=goreleaser -X main.treeState={{ .IsGitDirty }}

archives:
  - name_template: >-
      {{- .ProjectName }}_
      {{ .Version }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
    format: tar.gz
    format_overrides:
      - goos: windows
        formats: [zip]
    builds_info:
      group: root
      owner: root
      mtime: "{{ .CommitDate }}"
    files:
      - src: README.md
        info:
          owner: root
          group: root
          mtime: "{{ .CommitDate }}"
      - src: LICENSE
        info:
          owner: root
          group: root
          mtime: "{{ .CommitDate }}"

checksum:
  name_template: "checksums.txt"

release:
  name_template: "go-project-template v{{ .Version }}"
  github:
    owner: "conflabermits"

changelog:
  sort: "asc"
  use: "github"
  format: "{{ .SHA }}: {{ .Message }}{{ with .AuthorUsername }} (@{{ . }}){{ end }}"
  filters:
    exclude:
      - "^test:"
      - "^test\\("
      - "^chore: update$"
      - "^chore: docs$"
      - "^docs: update$"
      - "^chore: schema$"
      - "^chore: typo$"
      - "^chore: auto-update generated files$"
      - "^chore: update schema$"
      - "^chore: schema update$"
      - "^chore\\(deps\\): "
      - "^(build|ci): "
      - "merge conflict"
      - "merge conflict"
      - Merge pull request
      - Merge remote-tracking branch
      - Merge branch
      - go mod tidy
  groups:
    - title: "New Features"
      regexp: '^.*?feat(\(.+\))??!?:.+$'
      order: 100
    - title: "Security updates"
      regexp: '^.*?sec(\(.+\))??!?:.+$'
      order: 150
    - title: "Bug fixes"
      regexp: '^.*?(fix|refactor)(\(.+\))??!?:.+$'
      order: 200
    - title: "Documentation updates"
      regexp: ^.*?docs?(\(.+\))??!?:.+$
      order: 400
    - title: Other work
      order: 9999

dockers:
  - image_templates:
      - "ghcr.io/conflabermits/go-project-template:{{ .Version }}"
    dockerfile: Dockerfile
    build_flag_templates:
      - "--pull"
      - "--platform=linux/amd64,linux/arm64"
    use: buildx
    skip_push: false
    extra_files:
      - go.mod
      - go.sum
      - cmd
      - internal
